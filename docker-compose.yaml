version: '3'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9997:9997"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: kafka

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - 8090:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka_cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: PLAINTEXT://kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  db:
    image: postgres:16rc1-alpine3.18
    restart: always
    container_name: db
    ports:
      - "5433:5432"
    volumes:
      - C:\logs:/var/lib/postgresql/data
    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: deal_db

  deal:
    container_name: deal
    build: .
    image: deal
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - db
      - kafka
      - conveyor
    environment:
      - spring.datasource.url=jdbc:postgresql://db:5432/deal_db
      - spring.datasource.username=postgres
      - spring.datasource.password=1234
      - spring.kafka.producer.bootstrap-servers=kafka:29092
      - custom.integration.conveyor.get.offers=http://conveyor:8080/conveyor/offers
      - custom.integration.conveyor.calculate.credit=http://conveyor:8080/conveyor/calculation

  conveyor:
    container_name: conveyor
    image: conveyor
    ports:
      - "8080:8080"

  application:
    container_name: application
    image: application
    restart: always
    ports:
      - "8082:8082"
    environment:
      - custom.integration.deal.url.choose.offer=http://deal:8081/deal/offer
      - custom.integration.deal.url.get.offers=http://deal:8081/deal/application

  dossier:
    container_name: dossier
    image: dossier
    restart: always
    ports:
      - "8083:8083"
    environment:
      - custom.integration.deal.get.credit=http://deal:8081/deal/applicationDto/{id}
      - spring.kafka.consumer.bootstrap-servers=kafka:29092
      - spring.kafka.consumer.group-id=group-id
      - spring.kafka.consumer.auto-offset-reset=latest
      - spring.kafka.consumer.enable-auto-commit=true
      - spring.kafka.consumer.auto-commit-interval=1000

  gateway:
    container_name: gateway
    image: gateway
    restart: always
    ports:
      - "7777:7777"
    environment:
      - custom.integration.application.url.get.offers=http://application:8082/application
      - custom.integration.application.url.choose.offer=http://application:8082/application/offer
      - custom.integration.deal.url.calculate.credit=http://deal:8081/deal/calculate/{id}
      - custom.integration.deal.url.send.documents=http://deal:8081/deal/document/{id}/send
      - custom.integration.deal.url.sign.documents=http://deal:8081/deal/document/{id}/sign
      - custom.integration.deal.url.deny.loan.request=http://deal:8081/deal/document/{id}/deny
      - custom.integration.deal.url.sign.documents.with.code=http://deal:8081/deal/document/{id}/code